id: WEB-014
title: "Event-Driven Webhook System with Retry and DLQ"
difficulty: advanced
category: web_api
languages:
  - python
  - javascript
  - typescript
  - go
  - java

requirements:
  functional:
    - id: FR-001
      description: "The system MUST deliver webhooks for all configured events"
      priority: MUST
      validation:
        type: integration_test
    
    - id: FR-002
      description: "The system MUST implement exponential backoff retry logic"
      priority: MUST
      validation:
        type: integration_test
    
    - id: FR-003
      description: "The system MUST move failed webhooks to Dead Letter Queue"
      priority: MUST
      validation:
        type: integration_test
    
    - id: FR-004
      description: "The system MUST sign webhook payloads with HMAC-SHA256"
      priority: MUST
      validation:
        type: unit_test
    
    - id: FR-005
      description: "The system MUST guarantee at-least-once delivery"
      priority: MUST
      validation:
        type: integration_test
    
    - id: FR-006
      description: "The system MUST support webhook endpoint registration"
      priority: MUST
      validation:
        type: integration_test
        endpoint: "/api/v1/webhooks"
    
    - id: FR-007
      description: "The system MUST provide webhook delivery status tracking"
      priority: MUST
      validation:
        type: integration_test
    
    - id: FR-008
      description: "The system MUST implement webhook event filtering"
      priority: SHOULD
      validation:
        type: integration_test
    
    - id: FR-009
      description: "The system SHOULD support webhook replay functionality"
      priority: SHOULD
      validation:
        type: integration_test
    
    - id: FR-010
      description: "The system MAY support webhook batching"
      priority: MAY
      validation:
        type: integration_test
  
  non_functional:
    performance:
      p95_latency_ms: 500
      p99_latency_ms: 2000
      throughput_rps: 1000
      cpu_limit: "2000m"
      memory_limit: "2Gi"
      max_retry_attempts: 5
      dlq_retention_days: 7
    
    security:
      network_egress: "ALLOW"
      secrets_in_code: "FORBIDDEN"
      authentication: "REQUIRED"
      encryption: "TLS_REQUIRED"
      payload_signing: "REQUIRED"
    
    quality:
      max_cyclomatic_complexity: 12
      min_test_coverage: 85
      documentation_required: true
      type_hints_required: true

constraints:
  allowed_packages:
    - "rabbitmq"
    - "kafka"
    - "redis"
    - "aws-sqs"
    - "azure-service-bus"
    - "bull"
    - "celery"
    - "resque"
  
  disallowed_packages: []
  
  disallowed_syscalls:
    - "fork"
    - "exec"
  
  resource_limits:
    max_cpu_cores: 4
    max_memory_gb: 4
    max_disk_gb: 20
    max_network_bandwidth_mbps: 200
  
  time_limits:
    generation_minutes: 40
    execution_minutes: 20

artifacts:
  entrypoint: "src/main"
  dockerfile: "Dockerfile"
  healthcheck: "/health"
  config_files:
    - "config/webhooks.yaml"
    - "config/queue.yaml"
    - "config/retry.yaml"

tests:
  unit: "tests/unit/"
  integration: "tests/integration/"
  chaos: "tests/chaos/"
  test_data:
    input_files:
      - "test_data/events.json"
      - "test_data/endpoints.json"
      - "test_data/failure_scenarios.yaml"
    expected_outputs:
      - "test_data/expected/deliveries.json"
      - "test_data/expected/dlq_messages.json"

metrics:
  weights:
    functional_coverage: 0.35
    pass_rate: 0.25
    performance: 0.20
    code_quality: 0.10
    security: 0.10
  
  thresholds:
    min_functional_coverage: 90
    min_pass_rate: 95
    min_performance_score: 85

pass_criteria:
  min_total_score: 0.85
  mandatory_requirements:
    - "FR-001"
    - "FR-002"
    - "FR-003"
    - "FR-004"
    - "FR-005"
    - "FR-006"
    - "FR-007"
  forbidden_violations:
    - "critical_security"
    - "runtime_failure"
    - "message_loss"
    - "signature_failure"

metadata:
  author: "Req2Run Team"
  created_date: "2024-01-21"
  last_modified: "2024-01-21T11:00:00Z"
  version: "1.0.0"
  tags:
    - "webhooks"
    - "event-driven"
    - "retry"
    - "dlq"
    - "message-queue"
    - "reliability"
  references:
    - title: "Webhook Best Practices"
      url: "https://webhooks.fyi/"
    - title: "Dead Letter Queue Pattern"
      url: "https://aws.amazon.com/blogs/compute/using-amazon-sqs-dead-letter-queues-to-replay-messages/"
    - title: "Exponential Backoff"
      url: "https://en.wikipedia.org/wiki/Exponential_backoff"
  notes: |
    This problem tests the ability to implement a reliable webhook delivery
    system with proper retry logic, dead letter queue, and security measures.