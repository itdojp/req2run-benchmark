id: WEB-011
title: "Secure File Upload with Presigned URLs"
difficulty: intermediate
category: web_api
languages:
  - python
  - javascript
  - typescript
  - go
  - java

requirements:
  functional:
    - id: FR-001
      description: "The system MUST generate presigned URLs for secure uploads"
      priority: MUST
      validation:
        type: integration_test
        endpoint: "/api/v1/upload/presign"
    
    - id: FR-002
      description: "The system MUST validate file types and sizes before upload"
      priority: MUST
      validation:
        type: unit_test
    
    - id: FR-003
      description: "The system MUST scan uploaded files for malware"
      priority: MUST
      validation:
        type: integration_test
    
    - id: FR-004
      description: "The system MUST implement upload progress tracking"
      priority: MUST
      validation:
        type: integration_test
    
    - id: FR-005
      description: "The system MUST support multipart uploads for large files"
      priority: MUST
      validation:
        type: integration_test
    
    - id: FR-006
      description: "The system MUST generate unique identifiers for uploaded files"
      priority: MUST
      validation:
        type: unit_test
    
    - id: FR-007
      description: "The system MUST provide file metadata retrieval"
      priority: MUST
      validation:
        type: integration_test
        endpoint: "/api/v1/files/{file_id}"
    
    - id: FR-008
      description: "The system MUST implement file expiration policies"
      priority: SHOULD
      validation:
        type: integration_test
    
    - id: FR-009
      description: "The system SHOULD support file versioning"
      priority: SHOULD
      validation:
        type: integration_test
    
    - id: FR-010
      description: "The system MAY support file thumbnails generation"
      priority: MAY
      validation:
        type: integration_test
  
  non_functional:
    performance:
      p95_latency_ms: 200
      p99_latency_ms: 500
      throughput_rps: 500
      cpu_limit: "1000m"
      memory_limit: "1Gi"
      max_file_size_mb: 100
    
    security:
      network_egress: "ALLOW"
      secrets_in_code: "FORBIDDEN"
      authentication: "REQUIRED"
      encryption: "TLS_REQUIRED"
      file_scanning: "REQUIRED"
    
    quality:
      max_cyclomatic_complexity: 10
      min_test_coverage: 85
      documentation_required: true
      type_hints_required: true

constraints:
  allowed_packages:
    - "boto3"
    - "azure-storage"
    - "google-cloud-storage"
    - "minio"
    - "clamav"
    - "multer"
    - "busboy"
  
  disallowed_packages: []
  
  disallowed_syscalls:
    - "fork"
    - "exec"
  
  resource_limits:
    max_cpu_cores: 2
    max_memory_gb: 2
    max_disk_gb: 50
    max_network_bandwidth_mbps: 200
  
  time_limits:
    generation_minutes: 25
    execution_minutes: 15

artifacts:
  entrypoint: "src/main"
  dockerfile: "Dockerfile"
  healthcheck: "/health"
  config_files:
    - "config/storage.yaml"
    - "config/security.yaml"
    - "config/upload.yaml"

tests:
  unit: "tests/unit/"
  integration: "tests/integration/"
  security: "tests/security/"
  test_data:
    input_files:
      - "test_data/sample_files/"
      - "test_data/malware_samples/"
    expected_outputs:
      - "test_data/expected/upload_responses.json"
      - "test_data/expected/scan_results.json"

metrics:
  weights:
    functional_coverage: 0.35
    pass_rate: 0.30
    performance: 0.15
    code_quality: 0.10
    security: 0.10
  
  thresholds:
    min_functional_coverage: 90
    min_pass_rate: 95
    min_performance_score: 85

pass_criteria:
  min_total_score: 0.80
  mandatory_requirements:
    - "FR-001"
    - "FR-002"
    - "FR-003"
    - "FR-004"
    - "FR-005"
    - "FR-006"
    - "FR-007"
  forbidden_violations:
    - "critical_security"
    - "runtime_failure"
    - "malware_upload"
    - "data_leak"

metadata:
  author: "Req2Run Team"
  created_date: "2024-01-21"
  last_modified: "2024-01-21T11:00:00Z"
  version: "1.0.0"
  tags:
    - "file-upload"
    - "presigned-url"
    - "security"
    - "s3"
    - "object-storage"
    - "malware-scanning"
  references:
    - title: "S3 Presigned URLs"
      url: "https://docs.aws.amazon.com/AmazonS3/latest/userguide/PresignedUrlUploadObject.html"
    - title: "Secure File Upload"
      url: "https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload"
  notes: |
    This problem tests the ability to implement secure file upload functionality
    with proper validation, malware scanning, and cloud storage integration.